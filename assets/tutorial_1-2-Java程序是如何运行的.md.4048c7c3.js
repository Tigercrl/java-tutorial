import{_ as a,o as t,c as o,Q as s}from"./chunks/framework.7cebd429.js";const u=JSON.parse('{"title":"1.2 Java程序是如何运行的","description":"","frontmatter":{},"headers":[],"relativePath":"tutorial/1-2-Java程序是如何运行的.md","filePath":"tutorial/1-2-Java程序是如何运行的.md","lastUpdated":null}'),r={name:"tutorial/1-2-Java程序是如何运行的.md"},e=s('<h1 id="_1-2-java程序是如何运行的" tabindex="-1">1.2 Java程序是如何运行的 <a class="header-anchor" href="#_1-2-java程序是如何运行的" aria-label="Permalink to &quot;1.2 Java程序是如何运行的&quot;">​</a></h1><p>Java 程序的运行必须经过编写、编译和运行 3 个步骤。</p><h2 id="编写" tabindex="-1">编写 <a class="header-anchor" href="#编写" aria-label="Permalink to &quot;编写&quot;">​</a></h2><p>编写指的就是写代码了。Java程序的代码文件是以 <strong>.java</strong> 结尾的文本文件。</p><h2 id="编译-compile" tabindex="-1">编译（Compile） <a class="header-anchor" href="#编译-compile" aria-label="Permalink to &quot;编译（Compile）&quot;">​</a></h2><p>Java程序写完后，需要编译才可运行。</p><p>编译就是把你写的代码转化为你的电脑可以理解的、由二进制组成的可运行文件，也就是字节码（Byte Code）。在Java中，编译好的程序是由 <strong>.class</strong> 结尾的。</p><p>如果你的程序需要多个 <strong>.class</strong> 文件相互配合才可运行，可以将它们打包为单个的 <strong>.jar</strong> 文件，打包方法以后会讲。</p><p>在编译完成后，会转成二进制，所以不能直接查看程序的代码，必须使用 <strong>反编译程序</strong> 才可转换成可读的代码。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>除非特别允许，请勿将反编译他人程序后的源码发布在网上，否则会造成侵权。</p></div><p>一般情况下，一个制作完成的程序要给别人，只需要给编译好的 <strong>.class</strong> 文件或者由多个 <strong>.class</strong> 文件打包成的 <strong>.jar</strong> 文件就可以了，不用给 <strong>.java</strong> 文件然后在另一个电脑上再次编译。</p><h2 id="运行-run" tabindex="-1">运行（Run） <a class="header-anchor" href="#运行-run" aria-label="Permalink to &quot;运行（Run）&quot;">​</a></h2><p>运行就很好理解了，就是把编译好的 <strong>.class</strong> 文件运行就好了。虽然 <strong>.class</strong> 文件支持在所有系统上运行，但是需要安装系统对应的JRE或JDK才可运行。</p>',13),n=[e];function l(c,i,_,p,d,h){return t(),o("div",null,n)}const m=a(r,[["render",l]]);export{u as __pageData,m as default};
